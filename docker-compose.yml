version: '3.8'

services:
  db:
    image: postgres:16-alpine
    container_name: fire-suite-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fire_suite_exchange
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog:latest
    container_name: fire-suite-mailhog
    restart: unless-stopped
    ports:
      - '1025:1025' # SMTP
      - '8025:8025' # Web UI
    healthcheck:
      test: ['CMD', 'wget', '--quiet', '--tries=1', '--spider', 'http://localhost:8025']
      interval: 10s
      timeout: 5s
      retries: 3

  # Uncomment to run the app in Docker (development)
  # web:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: fire-suite-web
  #   restart: unless-stopped
  #   environment:
  #     DATABASE_URL: postgresql://postgres:postgres@db:5432/fire_suite_exchange?schema=public
  #     NEXTAUTH_URL: http://localhost:3000
  #     SMTP_HOST: mailhog
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - .:/app
  #     - /app/node_modules
  #     - /app/.next
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     mailhog:
  #       condition: service_healthy
  #   command: npm run dev

volumes:
  postgres_data:
    driver: local
